#!/bin/bash
#
# Composer & Offenbach installation script
#
# @package alpine-tools
# @author  Yannoff <https://github.com/yannoff>
# @license MIT
#

OFFENBACH_BUILD_DEPS="git make"
COMPOSER_RUN_DEPS=git
OFFENBACH_REPOSITORY=https://github.com/yannoff/offenbach.git
COMPOSER_INSTALLER=https://getcomposer.org/installer
COMPOSER_SIGNATURE=https://composer.github.io/installer.sig

if test -n "${VERBOSE}"
then
    OUTPUT=/dev/stdout
else
    OUTPUT=/dev/null
fi

bold="[01m"
rset="[00m"

####### Install offenbach

printf "\n${bold}%s${rset}\n\n" "Installing offenbach..."

apk add --no-cache --virtual .offenbach-build-deps ${OFFENBACH_BUILD_DEPS} >${OUTPUT}

# Clone the sources repository
cd /tmp && \
git clone ${OFFENBACH_REPOSITORY} 2>${OUTPUT} && \
cd offenbach

# Build and install
./configure --bindir /usr/local/bin bin/offenbach && \
make >${OUTPUT} && \
make install >${OUTPUT}

# Remove sources
cd /tmp && rm -rf offenbach

# Remove build dependencies
apk del --no-cache .offenbach-build-deps >${OUTPUT}


####### Install composer

printf "\n${bold}%s${rset}\n\n" "Installing composer..."

# Download composer-setup.php & check for file integrity
curl -sSL ${COMPOSER_INSTALLER} -o composer-setup.php

# Check composer installer integrity against remote signature file
ACTUAL_SIG=`php -r "echo hash_file('sha384', 'composer-setup.php');"`
EXPECTED_SIG=`curl -s ${COMPOSER_SIGNATURE} | tr -d "\n"`

# If signature hash is correct, proceed to install
if [ "$ACTUAL_SIG" = "$EXPECTED_SIG" ]
then
    php composer-setup.php --filename=composer --install-dir=/usr/bin 2>${OUTPUT}
else
    echo "[composer] Error: signatures does not match!"
fi

# Remove composer installer
rm composer-setup.php

# When the container is run as an unknown user (e.g 1000), COMPOSER_HOME defaults to /.composer
mkdir /.composer 2>${OUTPUT} && chmod 0777 /.composer

# Install runtime dependencies
apk add --no-cache ${COMPOSER_RUN_DEPS} >${OUTPUT}
